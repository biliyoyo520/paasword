{
    "Name": "English (US)",
    "error_gpg_not_found": "Error: gpg not found. Please install GnuPG and ensure gpg is in PATH.",
    "fake_time_format_error": "Error: FAKE_TIME must be in format YYYYMMDDThhmmss (or empty)",
    "fake_time_note": "Using faked-system-time = {actual_fake} (Requested: {requested}, Card created: {created_fake})",
    "EdDSA_detected": "DSA detected: Some implementations use random numbers for k which may cause irreproducibility. Continue anyway? (y/N): ",
    "unknown_keyid": "Key ID not found on card, please verify card is available.",
    "signing_first": "Performing 1st signature (PIN/touch may be required):",
    "signing_second": "Performing 2nd signature (PIN/touch may be required):",
    "sig1_not_found": "1st signature did not generate signature file, please check gpg output and retry.",
    "sig2_not_found": "2nd signature did not generate signature file, please check gpg output and retry.",
    "check_fake_time": "2nd signature forced to use the same faked-system-time = {use_fake_for_second}",
    "tmp_dir": "Temporary directory: {tmpd}",
    "input_username": "Please enter username (login): ",
    "input_domain": "Please enter domain or URL: ",
    "input_password": "Enter your simple password (will not echo): ",
    "input_password_confirm": "Confirm your simple password (will not echo): ",
    "error_password_mismatch": "Error: Passwords do not match. Please re-run script.",
    "result_hash": "Hash result:",
    "result_password": "Final password:",
    "result_note": "Note: Copy the entire line of password (avoid taking only the trailing part)",
    "enter_to_exit": "Press <Enter> to exit",
    "gpg_card_status_error": "gpg --card-status returned error:",
    "gpg_card_status_output": "Partial output of gpg --card-status (first few lines):",
    "exit": "Exit.",
    "desired_chars_adjusted": "Note: DESIRED_CHARS adjusted from {desired_chars} to {out_chars} (max {max_chars}).",
    "sig_created_timestamp_not_parsed": "{file_name} could not parse created timestamp.",
    "time_mismatch_warning": "\n==== Time mismatch warning ({file_name}) ====",
    "time_mismatch_note": "\n[Note] Signature time does not match fake_time, which may cause password inconsistency. Please check time settings or retry.\n",
    "mpi_consistent": "MPI consistent: Using this MPI to derive pepper.",
    "mpi_mismatch_warning": "Warning: MPIs of two signatures are inconsistent! Will derive two passwords for comparison.",
    "only_sig1_mpi": "Only MPI of sig1 parsed: Using sig1's MPI.",
    "only_sig2_mpi": "Only MPI of sig2 parsed: Using sig2's MPI.",
    "no_mpi_fallback": "No MPI parsed, fallback to use sig2's binary SHA256 as pepper (suboptimal).",
    "sig_created_timestamp": "{file_name} created timestamp: {ts}",
    "utc_time": "UTC time: {utc_time}",
    "fake_time_value": "fake_time: {fake_time}",
    "mpi1_sha256": "MPI1 SHA256={h1}",
    "mpi2_sha256": "MPI2 SHA256={h2}",
    "sig_info_and_password": "\n=== {file_name} info and derived password===",
    "sig_hash": "{file_name} hash: {hash}",
    "derived_password": "{file_name} derived password: {password}",
    "time_correct_sig_info": "\n=== [Time correct] {file_name} info===",
    "derived_result_based_on": "\n=== Derived result based on {tag} ===",
    "argon2_not_found": "\nNote: argon2-cffi not detected, using PBKDF2 as fallback. For better security, please install argon2-cffi.",
    "script_finished": "\nScript finished. To keep or delete temporary signature files, please check: {tmpd}",
    "script_note": "Note: This script uses MPI derivation mode; as long as the key and inputs (domain, username, password) are consistent, the results should be stable across different devices/times."
    ,
    "select_language_prompt": "Select language:\n",
    "select_key_source_prompt": "Select key source:\n",
    "key_source_physical": "Physical key / smartcard",
    "key_source_privfile": "Private key file (import temporarily)",
    "enter_key_file_path": "Enter path to your private key file: ",
    "importing_key": "Importing private key into temporary GPG home...",
    "import_failed": "Failed to import private key. gpg output:\n{output}",
    "using_privkey_note": "Using private key file imported into temporary GPG home.",
    "cleanup_homedir_prompt": "Temporary GPG home created at {homedir}. Will be deleted at exit unless KEEP_GPG_HOMEDIR is set.",
    "cleanup_homedir_deleted": "Temporary GPG home {homedir} deleted.",
    "cleanup_homedir_kept": "Keeping temporary GPG home {homedir} due to KEEP_GPG_HOMEDIR."
}